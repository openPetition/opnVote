import { Entity, Column, CreateDateColumn, Unique, PrimaryColumn, Index } from 'typeorm'

@Entity('blindedSignatures')
@Unique('uc_user_election', ['userID', 'electionID'])
@Index('idx_status_created', ['onchainStatus', 'createdDate'])
@Index('idx_blindedToken', ['blindedToken'])
export class BlindedSignature {
  @PrimaryColumn({ type: 'bigint', unsigned: true })
  userID!: number // provided by AP

  @PrimaryColumn({ type: 'int', unsigned: true })
  electionID!: number // provided by Smart Contract

  @Column({ type: 'varchar', length: 1026 })
  blindedToken!: string // user generated

  @Column({ type: 'varchar', length: 1026 })
  blindedSignature!: string // generated by Register

  @Column({ type: 'varchar', nullable: true, default: null })
  txHash?: string | null // TX hash publishing user registration

  @Column({ type: 'varchar', nullable: true, default: 'pending' })
  onchainStatus!: 'pending' | 'submitted' | 'confirmed' | 'failed'

  @Column({ type: 'varchar', nullable: true })
  batchID?: string | null

  @Column('text')
  jwt!: string // todo: change to hashed jwt

  @CreateDateColumn()
  createdDate!: Date
}
